export const GachaExtensionERC1155ABIv2 = [
  {
    inputs: [{ internalType: 'address', name: 'initialOwner', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'CannotChangePaymentToken', type: 'error' },
  { inputs: [], name: 'CannotChangeTokenVariations', type: 'error' },
  { inputs: [], name: 'CannotLowerTotalMaxBeyondTotal', type: 'error' },
  { inputs: [], name: 'CannotLowertokenVariationsBeyondVariations', type: 'error' },
  { inputs: [], name: 'CannotMintFromContract', type: 'error' },
  { inputs: [], name: 'CannotMintMoreThanReserved', type: 'error' },
  { inputs: [], name: 'ClaimAlreadyInitialized', type: 'error' },
  { inputs: [], name: 'ClaimInactive', type: 'error' },
  { inputs: [], name: 'ClaimNotInitialized', type: 'error' },
  { inputs: [], name: 'ClaimSoldOut', type: 'error' },
  { inputs: [], name: 'ContractDeprecated', type: 'error' },
  { inputs: [], name: 'FailedToTransfer', type: 'error' },
  { inputs: [], name: 'InvalidDate', type: 'error' },
  { inputs: [], name: 'InvalidInput', type: 'error' },
  { inputs: [], name: 'InvalidInstance', type: 'error' },
  { inputs: [], name: 'InvalidMintCount', type: 'error' },
  { inputs: [], name: 'InvalidPayment', type: 'error' },
  { inputs: [], name: 'InvalidSignature', type: 'error' },
  { inputs: [], name: 'InvalidStartingTokenId', type: 'error' },
  { inputs: [], name: 'InvalidStorageProtocol', type: 'error' },
  { inputs: [], name: 'InvalidVariationIndex', type: 'error' },
  { inputs: [], name: 'TokenDNE', type: 'error' },
  { inputs: [], name: 'TooManyRequested', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'AdminApproved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'account', type: 'address' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
    ],
    name: 'AdminRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'creatorContract', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'instanceId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'initializer', type: 'address' },
    ],
    name: 'SerendipityClaimInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'creatorContract', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'instanceId', type: 'uint256' },
    ],
    name: 'SerendipityClaimUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'creatorContract', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'instanceId', type: 'uint256' },
      { indexed: true, internalType: 'address', name: 'collector', type: 'address' },
      { indexed: false, internalType: 'uint32', name: 'mintCount', type: 'uint32' },
    ],
    name: 'SerendipityMintReserved',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MINT_FEE',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'admin', type: 'address' }],
    name: 'approveAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
          { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
          {
            components: [
              { internalType: 'uint8', name: 'variationIndex', type: 'uint8' },
              { internalType: 'uint32', name: 'amount', type: 'uint32' },
              { internalType: 'address', name: 'recipient', type: 'address' },
            ],
            internalType: 'struct ISerendipity.VariationMint[]',
            name: 'variationMints',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct ISerendipity.ClaimMint[]',
        name: 'mints',
        type: 'tuple[]',
      },
    ],
    name: 'deliverMints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bool', name: '_deprecated', type: 'bool' }],
    name: 'deprecate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deprecated',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAdmins',
    outputs: [{ internalType: 'address[]', name: 'admins', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
    ],
    name: 'getClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'enum ISerendipity.StorageProtocol',
            name: 'storageProtocol',
            type: 'uint8',
          },
          { internalType: 'uint32', name: 'total', type: 'uint32' },
          { internalType: 'uint32', name: 'totalMax', type: 'uint32' },
          { internalType: 'uint48', name: 'startDate', type: 'uint48' },
          { internalType: 'uint48', name: 'endDate', type: 'uint48' },
          { internalType: 'uint80', name: 'startingTokenId', type: 'uint80' },
          { internalType: 'uint8', name: 'tokenVariations', type: 'uint8' },
          { internalType: 'string', name: 'location', type: 'string' },
          { internalType: 'address payable', name: 'paymentReceiver', type: 'address' },
          { internalType: 'uint96', name: 'cost', type: 'uint96' },
          { internalType: 'address', name: 'erc20', type: 'address' },
        ],
        internalType: 'struct IERC1155Serendipity.Claim',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'getClaimForToken',
    outputs: [
      { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
      {
        components: [
          {
            internalType: 'enum ISerendipity.StorageProtocol',
            name: 'storageProtocol',
            type: 'uint8',
          },
          { internalType: 'uint32', name: 'total', type: 'uint32' },
          { internalType: 'uint32', name: 'totalMax', type: 'uint32' },
          { internalType: 'uint48', name: 'startDate', type: 'uint48' },
          { internalType: 'uint48', name: 'endDate', type: 'uint48' },
          { internalType: 'uint80', name: 'startingTokenId', type: 'uint80' },
          { internalType: 'uint8', name: 'tokenVariations', type: 'uint8' },
          { internalType: 'string', name: 'location', type: 'string' },
          { internalType: 'address payable', name: 'paymentReceiver', type: 'address' },
          { internalType: 'uint96', name: 'cost', type: 'uint96' },
          { internalType: 'address', name: 'erc20', type: 'address' },
        ],
        internalType: 'struct IERC1155Serendipity.Claim',
        name: 'claim',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'minter', type: 'address' },
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
    ],
    name: 'getUserMints',
    outputs: [
      {
        components: [
          { internalType: 'uint32', name: 'reservedCount', type: 'uint32' },
          { internalType: 'uint32', name: 'deliveredCount', type: 'uint32' },
        ],
        internalType: 'struct ISerendipity.UserMintDetails',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
      {
        components: [
          {
            internalType: 'enum ISerendipity.StorageProtocol',
            name: 'storageProtocol',
            type: 'uint8',
          },
          { internalType: 'uint32', name: 'totalMax', type: 'uint32' },
          { internalType: 'uint48', name: 'startDate', type: 'uint48' },
          { internalType: 'uint48', name: 'endDate', type: 'uint48' },
          { internalType: 'uint8', name: 'tokenVariations', type: 'uint8' },
          { internalType: 'string', name: 'location', type: 'string' },
          { internalType: 'address payable', name: 'paymentReceiver', type: 'address' },
          { internalType: 'uint96', name: 'cost', type: 'uint96' },
          { internalType: 'address', name: 'erc20', type: 'address' },
        ],
        internalType: 'struct IERC1155Serendipity.ClaimParameters',
        name: 'claimParameters',
        type: 'tuple',
      },
    ],
    name: 'initializeClaim',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'admin', type: 'address' }],
    name: 'isAdmin',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
      { internalType: 'uint32', name: 'mintCount', type: 'uint32' },
    ],
    name: 'mintReserve',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'admin', type: 'address' }],
    name: 'revokeAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'signer', type: 'address' }],
    name: 'setSigner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },
    ],
    name: 'tokenURI',
    outputs: [{ internalType: 'string', name: 'uri', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
      {
        components: [
          {
            internalType: 'enum ISerendipity.StorageProtocol',
            name: 'storageProtocol',
            type: 'uint8',
          },
          { internalType: 'address payable', name: 'paymentReceiver', type: 'address' },
          { internalType: 'uint32', name: 'totalMax', type: 'uint32' },
          { internalType: 'uint48', name: 'startDate', type: 'uint48' },
          { internalType: 'uint48', name: 'endDate', type: 'uint48' },
          { internalType: 'uint96', name: 'cost', type: 'uint96' },
          { internalType: 'string', name: 'location', type: 'string' },
        ],
        internalType: 'struct IERC1155Serendipity.UpdateClaimParameters',
        name: 'updateClaimParameters',
        type: 'tuple',
      },
    ],
    name: 'updateClaim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creatorContractAddress', type: 'address' },
      { internalType: 'uint256', name: 'instanceId', type: 'uint256' },
      { internalType: 'enum ISerendipity.StorageProtocol', name: 'storageProtocol', type: 'uint8' },
      { internalType: 'string', name: 'location', type: 'string' },
    ],
    name: 'updateTokenURIParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address payable', name: 'receiver', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];